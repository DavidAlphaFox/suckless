// http://github.com/mitchweaver/suckless
--- dwm/dwm.c
+++ dwm/dwm.c
@@ -266,6 +266,7 @@
 
 /* configuration, allows nested code to access above variables */
 #include "config.h"
+#include "dwm_info.c"
 
 struct Pertag {
 	unsigned int curtag, prevtag; /* current and previous tag */
@@ -1520,6 +1521,12 @@
 void
 setlayout(const Arg *arg)
 {
+    for(int i = 0 ; i < NUM_LAYOUTS ; i++ )
+        if (&layouts[i] == arg->v) {
+            set_dwm_info_current_layout(i);
+            break;
+        }
+
 	if (!arg || !arg->v || arg->v != selmon->lt[selmon->sellt])
 		selmon->sellt = selmon->pertag->sellts[selmon->pertag->curtag] ^= 1;
 	if (arg && arg->v)
@@ -1957,6 +1964,24 @@
 	c->isfixed = (c->maxw && c->maxh && c->maxw == c->minw && c->maxh == c->minh);
 }
 
+void update_ws_bools(Monitor *m) {
+    unsigned int i, occ = 0, urg = 0;
+    Client *c;
+    for (c = m->clients; c; c = c->next) {
+        occ |= c->tags;
+        // TODO: incorporate this urgent into lemonbar
+        if (c->isurgent) urg |= c->tags;
+    }
+    for (i = 0; i < LENGTH(tags); i++) {
+        // true if tag has clients, false if not
+        if (occ & 1 << i) {
+            toggle_dwm_info_ws(i+1, 1);
+        } else {
+            toggle_dwm_info_ws(i+1, 0);
+        }
+    }
+}
+
 void
 updatetitle(Client *c)
 {
@@ -2011,11 +2011,13 @@
        selmon->tagset[selmon->seltags] = arg->ui & TAGMASK;
        selmon->pertag->prevtag = selmon->pertag->curtag;

-       if (arg->ui == ~0)
+       if (arg->ui == ~0) {
            selmon->pertag->curtag = 0;
-       else {
+            set_dwm_info_current_workspace(0);
+        } else {
            for (i = 0; !(arg->ui & 1 << i); i++) ;
            selmon->pertag->curtag = i + 1;
+            set_dwm_info_current_workspace(i + 1);
        }
    } else {
        tmptag = selmon->pertag->prevtag;
@@ -2098,6 +2125,8 @@
 int
 main(int argc, char *argv[])
 {
+    init_dwm_info(gappx, bh, topbar, NUM_WORKSPACES);
+
 	if (argc == 2 && !strcmp("-v", argv[1]))
 		die("dwm-"VERSION);
 	else if (argc != 1)
--- /dev/null
+++ dwm/dwm_info.c
@@ -0,0 +1,52 @@
+void init_dwm_info(const int gappx, const int bh, const int topbar, const int num_ws) {
+    system("[ -d /tmp/dwm_info ] && rm -rf /tmp/dwm_info");
+    mkdir("/tmp/dwm_info", 0777);
+
+    for(int i = 1; i < NUM_WORKSPACES; i++) {
+        char buf[20];
+        snprintf(buf, sizeof(buf), "/tmp/dwm_info/ws%d", i);
+        FILE *f = fopen(buf, "w");
+        if(f) {
+            fprintf(f, "%d", 0);
+            fclose(f);
+        }
+    }
+    FILE *fCWS = fopen("/tmp/dwm_info/current_ws", "w"); fprintf(fCWS, "1"); fclose(fCWS);
+    FILE *fCL = fopen("/tmp/dwm_info/current_layout", "w"); fprintf(fCL, "0"); fclose(fCL);
+    FILE *fCHECK = fopen("/tmp/dwm_info/check", "w"); fprintf(fCHECK, "1"); fclose(fCHECK);
+
+    FILE *fgappx = fopen("/tmp/dwm_info/gappx", "w"); fprintf(fgappx, "%d", gappx); fclose(fgappx);
+    FILE *fbar_height = fopen("/tmp/dwm_info/bar_height", "w"); fprintf(fgappx, "%d", bh); fclose(fbar_height);
+    FILE *ftop_bar = fopen("/tmp/dwm_info/top_bar", "w"); fprintf(fgappx, "%d", topbar); fclose(ftop_bar);
+
+    FILE *fnum_ws = fopen("/tmp/dwm_info/num_ws", "w"); fprintf(fnum_ws, "%d", num_ws); fclose(fnum_ws);
+}
+
+void set_dwm_info_current_workspace(int i) {
+    FILE *f = fopen("/tmp/dwm_info/current_ws", "w");
+    fprintf(f, "%d", i);
+    fclose(f);
+    FILE *fCHECK = fopen("/tmp/dwm_info/check", "w"); fprintf(fCHECK, "1"); fclose(fCHECK);
+}
+void set_dwm_info_current_layout(int i) {
+    // sets index of current layout in layouts[]
+    FILE *f = fopen("/tmp/dwm_info/current_layout", "w");
+    fprintf(f, "%d", i);
+    fclose(f);
+    FILE *fCHECK = fopen("/tmp/dwm_info/check", "w"); fprintf(fCHECK, "1"); fclose(fCHECK);
+}
+
+void toggle_dwm_info_ws(int ws, int bool) {
+    // toggles whether the given tag has clients or not 
+    // NOTE: bool should only be either '1' or 0'
+    char buf[20];
+    snprintf(buf, sizeof(buf), "/tmp/dwm_info/ws%d", ws);
+    FILE *f = fopen(buf, "w");
+
+    if(f) {
+        fprintf(f, "%d", bool);
+        fclose(f);
+    }
+
+    FILE *fCHECK = fopen("/tmp/dwm_info/check", "w"); fprintf(fCHECK, "1"); fclose(fCHECK);
+}
